<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                    xmlns:utils="clr-namespace:Grappachu.SolutionCloner.Common.Utils"
                    mc:Ignorable="d">

    <!-- Converters -->
    <utils:ThreeStateBoolConverter x:Key="IsCheckedConverter" />
    <utils:ThreeStateBoolConverter x:Key="IsCheckedReverseConverter" TrueValue="False" FalseValue="True" NullValue="False"  />

    <utils:NegateBoolConverter x:Key="NegateBoolConverter"   />
    <utils:IsNullConverter x:Key="IsNullConverter"   />
    <utils:IsNotNullConverter x:Key="IsNotNullConverter"   />
    <utils:BoolToVisibilityConverter x:Key="BoolToCollapsedConverter" FalseValue="Collapsed" />
    <utils:BoolToVisibilityConverter x:Key="BoolToHiddenConverter" FalseValue="Hidden" />
    <utils:BoolToVisibilityConverter x:Key="BoolToVisibleConverter" FalseValue="Visible" TrueValue="Collapsed" />
    <utils:ObjectToVisibilityConverter x:Key="ObjectToCollapsedConverter" NullValue="Collapsed" />
    <utils:BoolToStringConverter x:Key="BoolToLabelFreezeConverter" FalseValue="FREEZE" TrueValue="UNFREEZE" />
    <utils:BoolToStringConverter x:Key="BoolToIntBorderThicknessConverter" FalseValue="2" TrueValue="0" />
    <utils:BoolToStringConverter x:Key="BoolToBorderBrushPictureItemConverter" FalseValue="Red" TrueValue="#BEC6C4" />
    <utils:BoolToStringConverter x:Key="BoolToBorderBrushConverter" FalseValue="Red" TrueValue="#009847" />
    <utils:BoolToStringConverter x:Key="BoolToTextAlignmentConverter" FalseValue="Left" TrueValue="Right" />
    <utils:BoolToStringConverter x:Key="BoolToMarginRightConverter" FalseValue="0,0,60,0" TrueValue="0,0,0,0" />
    <utils:EmptyToVisibilityConverter x:Key="EmptyToHiddenConverter" EmptyOrNullValue="Hidden"  />
    <utils:NullToVisibilityConverter x:Key="NullToChartVisibilityConverter" TrueValue="Hidden"  FalseValue="Visible" />
    <utils:DatetimeToStringConverter x:Key="LogDateConverter" FormatString="HH:mm:ss"  NullValue="n/d" />
    <utils:IgnoreNewItemPlaceholderConverter x:Key="IgnoreNewItemPlaceholderConverter"  />
    <utils:TemplateLabelConverter x:Key="TemplateLabelConverter" />


    <!-- Base Elements -->
    <Style x:Key="StyleControl" TargetType="Control">
        <Setter Property="FontFamily" Value="Segoe UI" />
    </Style>

    <SolidColorBrush x:Key="ColorPrimary" Color="#009847" />
    <SolidColorBrush x:Key="ColorSecondary" Color="#BEC6C4" />
    <SolidColorBrush x:Key="ColorText" Color="#000000" />
    <SolidColorBrush x:Key="ColorShade" Color="#FFFFFF" />

    <SolidColorBrush x:Key="ColorError" Color="Red" />
    <SolidColorBrush x:Key="ColorOk" Color="Green" />
    <SolidColorBrush x:Key="ColorWarn" Color="Orange" />

    <!-- Window & Workspace -->
    <Style x:Key="StyleForm" TargetType="Window" BasedOn="{StaticResource StyleControl}">
        <Setter Property="WindowStyle" Value="None" />
        <!--<Setter Property="Icon" Value="../../applications.ico" />-->
        <Setter Property="WindowState" Value="Maximized" />
    </Style>
    <Style x:Key="MainWorkspace" TargetType="Panel">
        <Setter Property="Background" Value="{StaticResource ColorShade}" />
    </Style>
    <Style x:Key="MainAppHeader" TargetType="UserControl">
        <Setter Property="Margin" Value="0" />
    </Style>
    <Style x:Key="MainAppFooter" TargetType="UserControl">
        <Setter Property="Margin" Value="0" />
        <Setter Property="Background" Value="{StaticResource ColorShade}" />
    </Style>

    <!-- Overlay Dialog -->
    <Style x:Key="OverlayDialog" TargetType="Window" BasedOn="{StaticResource StyleControl}">
        <Setter Property="WindowStyle" Value="None" />
        <!--<Setter Property="Icon" Value="/Brovedani.B2Eye.Insight;component/Iconshock-Real-Vista-Security-Monitor.ico" />-->
        <Setter Property="WindowState" Value="Maximized" />
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Background" Value="#99000000" />
    </Style>
    <Style x:Key="OverlayWorkspace" TargetType="Panel">
        <Setter Property="Opacity" Value="1" />
        <Setter Property="Margin" Value="20" />
    </Style>
    <Style x:Key="OverlayTitleBar" TargetType="Label">
        <Setter Property="Background" Value="{StaticResource ColorPrimary}" />
        <Setter Property="Foreground" Value="{StaticResource ColorShade}" />
        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        <!--<Style.Triggers>
            <DataTrigger Binding="{Binding AlertState}" Value="{x:Static models:NotificationLevel.Critical}">
                <Setter Property="Background" Value="{StaticResource ColorError}" />
                <Setter Property="Foreground" Value="{StaticResource ColorShade}" />
            </DataTrigger>
            <DataTrigger Binding="{Binding AlertState}" Value="{x:Static models:NotificationLevel.Warning}">
                <Setter Property="Background" Value="{StaticResource ColorWarn}" />
                <Setter Property="Foreground" Value="{StaticResource ColorText}" />
            </DataTrigger>
        </Style.Triggers>-->
    </Style>
    <Style x:Key="OverlayTitle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="10,0,0,0" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>
    <Style x:Key="OverlayButton" TargetType="Button">
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalAlignment" Value="Right" />
        <Setter Property="BorderBrush" Value="Transparent" />
    </Style>

    <!-- Layout elements -->

    <Style x:Key="MenuIcon" TargetType="Image">
        <Setter Property="Width" Value="48" />
        <Setter Property="Height" Value="48" />
    </Style>

    <Style x:Key="MenuButtonFocusVisual">
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate>
                    <Border>
                        <Rectangle SnapsToDevicePixels="true" Margin="2"
                                   Stroke="{StaticResource ColorPrimary}" StrokeDashArray="1 2"
                                   StrokeThickness="2" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="ShineButtonBase" TargetType="{x:Type ButtonBase}" >
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border CornerRadius="5,5,5,5" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5"
                            x:Name="border" BorderBrush="#FFFFFFFF">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border Background="{TemplateBinding Background}" CornerRadius="5,5,5,5" x:Name="border1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.5*" />
                                    <RowDefinition Height="0.5*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" CornerRadius="5,5,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#00FFFFFF" Offset="0" />
                                            <GradientStop Color="#7EFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto"
                                        CornerRadius="0,0,5,5" Margin="1,0,-1,0"
                                        Background="{TemplateBinding BorderBrush}" />
                                <ContentPresenter VerticalAlignment="Center" Grid.Row="0" Grid.RowSpan="2"
                                                  HorizontalAlignment="Center"
                                                  x:Name="contentPresenter" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border1" Value="0.5" />
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideShine}"
                                                 x:Name="HideShine_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowShine_BeginStoryboard"
                                                 Storyboard="{StaticResource ShowShine}" />
                            </Trigger.EnterActions>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="MenuButton" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource ShineButtonBase}">
        <Setter Property="FocusVisualStyle" Value="{StaticResource MenuButtonFocusVisual}" />
        <Setter Property="Background" Value="{StaticResource ColorShade }" />
        <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" />
        <Setter Property="BorderBrush">
            <Setter.Value>
                <RadialGradientBrush>
                    <GradientStop Color="#7E009847" Offset="0" />
                    <GradientStop Color="#7EFFFFFF" Offset="0.8" />
                </RadialGradientBrush>
            </Setter.Value>
        </Setter>
        <Setter Property="BorderThickness" Value="3" />
        <Setter Property="HorizontalContentAlignment" Value="Center" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Width" Value="80" />
    </Style>



    <Style x:Key="MenuButtonExit" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource MenuButton}">

    </Style>

    <Style x:Key="MenuButtonToggle" TargetType="{x:Type RadioButton}"  BasedOn="{StaticResource MenuButton}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <ControlTemplate.Resources>
                        <Storyboard x:Key="ShowShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.5000000" Value="1" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                        <Storyboard x:Key="HideShine">
                            <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" Storyboard.TargetName="Shine"
                                                           Storyboard.TargetProperty="(UIElement.Opacity)">
                                <SplineDoubleKeyFrame KeyTime="00:00:00.3000000" Value="0" />
                            </DoubleAnimationUsingKeyFrames>
                        </Storyboard>
                    </ControlTemplate.Resources>
                    <Border CornerRadius="5,5,5,5" BorderThickness="1,1,1,1" RenderTransformOrigin="0.5,0.5"
                            x:Name="border" BorderBrush="#FFFFFFFF">
                        <Border.RenderTransform>
                            <TransformGroup>
                                <ScaleTransform ScaleX="1" ScaleY="1" />
                                <SkewTransform AngleX="0" AngleY="0" />
                                <RotateTransform Angle="0" />
                                <TranslateTransform X="0" Y="0" />
                            </TransformGroup>
                        </Border.RenderTransform>
                        <Border Background="{TemplateBinding Background}" CornerRadius="5,5,5,5" x:Name="border1">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="0.5*" />
                                    <RowDefinition Height="0.5*" />
                                </Grid.RowDefinitions>
                                <Border Grid.Row="0" CornerRadius="5,5,0,0">
                                    <Border.Background>
                                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                                            <GradientStop Color="#00FFFFFF" Offset="0" />
                                            <GradientStop Color="#7EFFFFFF" Offset="1" />
                                        </LinearGradientBrush>
                                    </Border.Background>
                                </Border>
                                <Border Grid.Row="1" Opacity="0" x:Name="Shine" Width="Auto" Height="Auto"
                                        CornerRadius="0,0,5,5" Margin="1,0,-1,0"
                                        Background="{TemplateBinding BorderBrush}" />
                                <ContentPresenter VerticalAlignment="Center" Grid.Row="0" Grid.RowSpan="2"
                                                  HorizontalAlignment="Center"
                                                  x:Name="contentPresenter" />
                            </Grid>
                        </Border>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Opacity" TargetName="border1" Value="0.5" />
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="0.5" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="RenderTransform" TargetName="border">
                                <Setter.Value>
                                    <TransformGroup>
                                        <ScaleTransform ScaleX="0.9" ScaleY="0.9" />
                                        <SkewTransform AngleX="0" AngleY="0" />
                                        <RotateTransform Angle="0" />
                                        <TranslateTransform X="0" Y="0" />
                                    </TransformGroup>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Trigger.ExitActions>
                                <BeginStoryboard Storyboard="{StaticResource HideShine}"
                                                 x:Name="HideShine_BeginStoryboard" />
                            </Trigger.ExitActions>
                            <Trigger.EnterActions>
                                <BeginStoryboard x:Name="ShowShine_BeginStoryboard"
                                                 Storyboard="{StaticResource ShowShine}" />
                            </Trigger.EnterActions>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border1" Value="{StaticResource ColorPrimary}" />
                            <Setter Property="Opacity" TargetName="border" Value="1" />
                            <Setter Property="Opacity" TargetName="border1" Value="1" />
                            <Setter Property="Opacity" TargetName="contentPresenter" Value="1" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="LinkButton" TargetType="{x:Type RadioButton}" BasedOn="{StaticResource ShineButtonBase}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <TextBlock><ContentPresenter /></TextBlock>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Foreground"  Value="{StaticResource ColorPrimary}" />
                <Setter Property="FontWeight"  Value="Bold" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <TextBlock TextDecorations="Underline"><ContentPresenter /></TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <Trigger Property="IsChecked" Value="False">
                <Setter Property="Foreground"  Value="{StaticResource ColorText}" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="RadioButton">
                            <TextBlock><ContentPresenter /></TextBlock>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
            <!--<Trigger Property="IsMouseOver" Value="true">
                <Setter   Property="Foreground"  Value="Red" />
            </Trigger>-->
        </Style.Triggers>
    </Style>

    <!-- Expander style -->
    <ControlTemplate x:Key="ExpanderToggleButton" TargetType="ToggleButton">
        <Grid Width="24" Height="24">
            <Rectangle Fill="{StaticResource ColorShade}" />
            <Border Name="ExpandBorder" RenderOptions.EdgeMode="Aliased" BorderBrush="Black" BorderThickness="2">
                <Path RenderOptions.EdgeMode="Aliased" Name="ExpandPath"
                      Stroke="{StaticResource ColorPrimary }" Margin="0" StrokeThickness="2"
                      Data="M 10 1 L 10 19 M 1 10 L 19 10" />
            </Border>
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="IsChecked" Value="True">
                <Setter Property="Data" TargetName="ExpandPath" Value="M 1 10 L 19 10" />
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter TargetName="ExpandBorder" Property="BorderBrush" Value="Gray" />
                <Setter TargetName="ExpandPath" Property="Stroke" Value="Gray" />
                <Setter Property="Data" TargetName="ExpandPath" Value="" />
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style TargetType="Expander">
        <Setter Property="Foreground" Value="{StaticResource ColorShade}" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Template">
            <Setter.Value>
                <!-- Control template for expander -->
                <ControlTemplate TargetType="Expander">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Name="ContentRow" Height="0" />
                        </Grid.RowDefinitions>
                        <Border
                            Name="Border" Grid.Row="0"
                            Background="{StaticResource ColorPrimary}"
                            BorderBrush="{StaticResource ColorSecondary}"
                            BorderThickness="1"
                            CornerRadius="2,2,0,0">
                            <Grid>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="*" />
                                    <ColumnDefinition Width="32" />
                                </Grid.ColumnDefinitions>
                                <!-- The following puts the toggle button in the right hand column, just like I want! -->
                                <ContentPresenter
                                    Grid.Column="0"
                                    Margin="4"
                                    ContentSource="Header"
                                    RecognizesAccessKey="True" />
                                <ToggleButton
                                    Grid.Column="1"
                                    IsChecked="{Binding Path=IsExpanded,Mode=TwoWay,
                                        RelativeSource={RelativeSource TemplatedParent}}"
                                    OverridesDefaultStyle="True"
                                    Template="{StaticResource ExpanderToggleButton}"
                                    Background="{StaticResource ColorText}" />

                            </Grid>
                        </Border>
                        <Border Name="Content" Grid.Row="1"
                                Background="{StaticResource ColorShade}" BorderBrush="{StaticResource ColorSecondary}"
                                BorderThickness="1,0,1,1" CornerRadius="0,0,4,4">
                            <ContentPresenter Margin="4" />
                        </Border>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsExpanded" Value="True">
                            <Setter TargetName="ContentRow" Property="Height"
                                    Value="{Binding ElementName=Content,Path=DesiredSize.Height}" />
                            <Setter TargetName="Border" Property="BorderBrush"
                                    Value="{StaticResource ColorPrimary}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="AppPanelIcon" TargetType="Image">
        <Setter Property="Width" Value="32" />
        <Setter Property="Height" Value="32" />
    </Style>

    <Style x:Key="AppPanelTitle" TargetType="Label">
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Margin" Value="5,0,0,0" />
    </Style>

    <!-- Custom Pages -->



    <Style x:Key="LoginError" TargetType="Label" BasedOn="{StaticResource StyleControl}" >
        <Setter Property="Background" Value="#ffffff" />
        <Setter Property="Foreground" Value="{StaticResource ColorError}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="Visibility" Value="Collapsed" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="3" BorderThickness="1" BorderBrush="{TemplateBinding Foreground}" Background="{TemplateBinding Background}">
                        <Grid MinHeight="48">
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Center" VerticalAlignment="Center"  />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <!-- Button -->

    <Style x:Key="DefaultBorder" TargetType="Border">
        <Setter Property="BorderBrush" Value="{StaticResource ColorPrimary}" />
        <Setter Property="BorderThickness" Value="1" />
        <Setter Property="Padding" Value="15" />
        <Setter Property="CornerRadius" Value="3" />
    </Style>

    <Style x:Key="DefaultInput" TargetType="Control" BasedOn="{StaticResource StyleControl}" >
        <Setter Property="Background" Value="{StaticResource ColorShade}" />
        <Setter Property="Foreground" Value="{StaticResource ColorText}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="32" />
    </Style>

    <Style x:Key="DefaultButton" TargetType="Button" BasedOn="{StaticResource StyleControl}" >
        <Setter Property="Background" Value="{StaticResource ColorPrimary}" />
        <Setter Property="Foreground" Value="{StaticResource ColorShade}" />
        <Setter Property="FontSize" Value="15" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" Background="{TemplateBinding Background}">
                        <Grid>
                            <!--<Path x:Name="PathIcon" Width="15" Height="25" Stretch="Fill" Fill="#4C87B3" HorizontalAlignment="Left" Margin="17,0,0,0" Data="F1 M 30.0833,22.1667L 50.6665,37.6043L 50.6665,38.7918L 30.0833,53.8333L 30.0833,22.1667 Z "/>-->
                            <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ColorSecondary}" />
                            <Setter Property="Foreground" Value="{StaticResource ColorText}" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="{StaticResource ColorShade}" />
                            <Setter Property="Foreground" Value="{StaticResource ColorPrimary}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource ColorPrimary}" />
                            <Setter Property="Foreground" Value="{StaticResource ColorShade}" />
                            <Setter Property="Opacity" Value="0.5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="CheckBox" x:Key="LedCheckBoxStyle">
        <Setter Property="Cursor" Value="Hand"></Setter>
        <Setter Property="Content" Value=""></Setter>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <Grid>
                        <Ellipse x:Name="outerEllipse">
                            <Ellipse.Fill>
                                <RadialGradientBrush>
                                    <GradientStop Offset="0" Color="Red"/>
                                    <GradientStop Offset="0.88" Color="LightCoral"/>
                                    <GradientStop Offset="1" Color="DarkRed"/>
                                </RadialGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <Ellipse Margin="10" x:Name="highlightCircle" >
                            <Ellipse.Fill >
                                <LinearGradientBrush >
                                    <GradientStop Offset="0" Color="Green"/>
                                    <GradientStop Offset="0.5" Color="LightGreen"/>
                                    <GradientStop Offset="1" Color="DarkGreen"/>
                                </LinearGradientBrush>
                            </Ellipse.Fill>
                        </Ellipse>
                        <ContentPresenter x:Name="content" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.5" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                            <Setter TargetName="outerEllipse" Property="Fill">
                                <Setter.Value>
                                    <RadialGradientBrush>
                                        <GradientStop Offset="0" Color="Green"/>
                                        <GradientStop Offset="0.88" Color="LightGreen"/>
                                        <GradientStop Offset="1" Color="DarkGreen"/>
                                    </RadialGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                        <Trigger Property="IsChecked" Value="False">
                            <Setter TargetName="highlightCircle" Property="Fill">
                                <Setter.Value>
                                    <LinearGradientBrush StartPoint="0.3,0" EndPoint="0.7,1">
                                        <GradientStop Offset="0" Color="Red"/>
                                        <GradientStop Offset="0.5" Color="LightCoral"/>
                                        <GradientStop Offset="1" Color="DarkRed"/>
                                    </LinearGradientBrush>
                                </Setter.Value>
                            </Setter>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- rif. https://web.archive.org/web/20160303041055/http://www.wpfhelper.com:80/index.php/android-ui-for-wpf/23-modern-ui-for-wpf/android-ui-for-wpf/26-wpf-checkbox-style-inspired-by-android -->
    <Style x:Key="DefaultCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <Setter Property="SnapsToDevicePixels" Value="true" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="FocusVisualStyle" Value="{DynamicResource MyFocusVisualStyte}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator>
                        <BulletDecorator.Bullet>
                            <Grid Height="{TemplateBinding Height}" Width="{Binding RelativeSource={RelativeSource Self}, Path=Height, UpdateSourceTrigger=PropertyChanged}"
                            MaxHeight="64" MaxWidth="64"  MinHeight="30" MinWidth="30" ShowGridLines="False">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="4*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="1*" />
                                    <ColumnDefinition Width="2*" />
                                    <ColumnDefinition Width="2*" />
                                </Grid.ColumnDefinitions>
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="3*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="4*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="1*" />
                                    <RowDefinition Height="4*" />
                                </Grid.RowDefinitions>

                                <Border Name="MainBorder"
                                    Grid.ColumnSpan="9" Grid.RowSpan="9"
                                    CornerRadius="4"
                                    BorderThickness="1"
                                    Background="Transparent" />

                                <Border Name="InnerBorder"
                                    Grid.Column="1" Grid.ColumnSpan="5"
                                    Grid.Row="2" Grid.RowSpan="5"
                                    BorderThickness="1"
                                    BorderBrush="#808080" />

                                <Path Name="InnerPath"
                                  Grid.Column="1" Grid.ColumnSpan="5"
                                  Grid.Row="2" Grid.RowSpan="5"
                                  Data="M31,5 L19.5,5 19.5,19.5 34.5,19.5 34.5,11.75"
                                  Stretch="Fill" Stroke="#808080"/>

                                <Path Name="CheckMark"
                                  Grid.Column="2" Grid.ColumnSpan="5"
                                  Grid.Row="1" Grid.RowSpan="5"
                                  Opacity="0"
                                  Data="M9.07743946676476E-09,4.31805768640244L4.68740335877841,8.86361158398516C4.68740335877841,8.86361158398516,16.3281249985376,-2.42451336648723,16.3281249985376,-2.42451336648723L14.0622100581796,-4.77304938341948 4.68740335877846,4.31805791992662 2.22656251699567,1.93164208562579z"
                                  Fill="#3babe3"
                                  Stretch="Fill"
                                  Stroke="#3babe3" />

                                <Path Name="InderminateMark"
                                  Grid.Column="3"
                                  Grid.Row="4"
                                  Data="M0,4 L1,5 5,1 4,0"
                                  Opacity="0"
                                  Stretch="Fill"
                                  StrokeThickness="0"
                                  Fill="#808080" />
                            </Grid>
                        </BulletDecorator.Bullet>
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="CheckStates">
                                <VisualState x:Name="Checked">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="1" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Unchecked" >
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="CheckMark" Duration="0:0:0.2" To="0" />
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Indeterminate">
                                    <Storyboard>
                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             Storyboard.TargetName="InderminateMark" Duration="0:0:0.2" To="1" />
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <ContentPresenter Margin="4,0,4,0"
                        VerticalAlignment="Center"
                        HorizontalAlignment="Left"
                        RecognizesAccessKey="True" />
                    </BulletDecorator>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="InnerBorder" Property="Visibility" Value="Collapsed" />
                        </Trigger>
                        <Trigger Property="IsPressed" Value="True">
                            <Setter TargetName="MainBorder" Property="Background" Value="#81d2eb" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="CheckMark" Property="Fill" Value="#cccccc" />
                            <Setter TargetName="CheckMark" Property="Stroke" Value="#cccccc" />
                            <Setter TargetName="InnerPath" Property="Stroke" Value="#cccccc" />
                            <Setter TargetName="InderminateMark" Property="Fill" Value="#cccccc" />
                            <Setter TargetName="InnerBorder" Property="BorderBrush" Value="#cccccc" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Dialogs -->

    <Style x:Key="DialogTitle" TargetType="Label">
        <Setter Property="FontSize" Value="24" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Margin" Value="10,0,10,0" />
    </Style>
    <Style x:Key="DialogDescription" TargetType="TextBlock">
        <Setter Property="FontSize" Value="12" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="MinHeight" Value="32" />
        <Setter Property="Margin" Value="20, 0,20,0" />
        <Setter Property="TextWrapping" Value="Wrap" />
    </Style>

    <!-- LIVE PAGE -->

    <Style x:Key="MachineInfoLabelStyle" TargetType="Label" BasedOn="{StaticResource StyleControl}">
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="5,10,5,5" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="Background" Value="{StaticResource ColorShade}" />
        <Setter Property="Foreground" Value="{StaticResource ColorText}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Label}">
                    <Border CornerRadius="3" BorderThickness="2" 
                            BorderBrush="{StaticResource ColorSecondary}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                              HorizontalAlignment="Left" VerticalAlignment="Center" 
                                              Margin="15,0,0,0"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="FreezeButton" TargetType="{x:Type Button}" BasedOn="{StaticResource DefaultButton}">
        <Setter Property="Margin" Value="5" />
        <Setter Property="Width" Value="160" />
        <Setter Property="Height" Value="48" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="FontSize" Value="24" />
        <Setter Property="Padding" Value="5" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border CornerRadius="3" BorderThickness="1" 
                            BorderBrush="{StaticResource ColorSecondary}" Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="MyContentPresenter" Content="{TemplateBinding Content}" 
                                          HorizontalAlignment="Center" VerticalAlignment="Center" />
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <!-- Logs Page -->





    <Style x:Key="StatsDataGridHeader" TargetType="{x:Type DataGridColumnHeader}">
        <Setter Property="Background" Value="{StaticResource ColorPrimary}"/>
        <Setter Property="Foreground" Value="White" />
        <Setter Property="Padding" Value="4" />
        <Setter Property="FontSize" Value="18" />
        <Setter Property="Margin" Value="0,0,1,0" />
    </Style>

    <Style x:Key="StatsTextGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="FontSize" Value="16" />
        <!--<Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>-->
    </Style>

    <Style x:Key="StatsDataGridCell" TargetType="{x:Type DataGridCell}">
        <Setter Property="FontSize" Value="16" />
        <Setter Property="TextBlock.TextAlignment" Value="Right" />
        <!--<Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" Value="White" />
                    <Setter Property="BorderBrush" Value="{x:Null}" />
                    <Setter Property="Foreground" Value="Black" />
                </Trigger>
            </Style.Triggers>-->
    </Style>

</ResourceDictionary>